@model OnlineAuction.Models.LotViewModel

@{
    ViewBag.Title = "Edit lot - " + Model.Name;

    string img;
    if (Model.Image == null)
    {
        img = "/Content/no_image.jpg";
    }
    else
    {
        img = $"data:image/gif;base64,{Convert.ToBase64String(Model.Image)}";
    }
}

<h2>Edit lot - @Model.Name</h2>

@using (Html.BeginForm("Edit", "Lot", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.LotId)
    @Html.HiddenFor(model => model.Image)

    <div class="form-horizontal row">
        <hr />
        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Time, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group input">
                        @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">min</span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group input">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">$</span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <label for="img_upload" class="btn btn-primary">Browse</label>
                    <input type="file" id="img_upload" name="upload" data-bind="event: {change: onChange}" style="display: none" />
                </div>
            </div>

            <div class="form-group">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" class="btn btn-info">
                        Back to list
                        <span class="glyphicon glyphicon-backward"></span>
                    </a>
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <img data-bind="attr: {src: imgSrc}" class="img-rounded img-responsive" />
        </div>
    </div>
}

@section Scripts {
    <script>
        window.img = '@img';
    </script>
    @Scripts.Render("~/bundles/imgHelper")
    @Scripts.Render("~/bundles/jqueryval")
}